package com.majimob.app.restaurantbuilder;


import com.codename1.components.ToastBar;
import com.codename1.ui.Display;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.messaging.Message;
import com.codename1.payment.PurchaseCallback;
import com.codename1.push.PushCallback;
import com.codename1.ui.Button;
import com.codename1.ui.FontImage;
import com.codename1.ui.Toolbar;
import com.codename1.ui.geom.Rectangle;
import com.codename1.ui.layouts.BoxLayout;
import com.majimob.app.restaurantbuilder.model.AppSettings;
import com.majimob.app.restaurantbuilder.model.AppStorage;
import com.majimob.app.restaurantbuilder.ui.AppForm;
import com.majimob.app.restaurantbuilder.ui.BaseNavigationForm;
import java.util.Hashtable;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class RestaurantAppBuilder implements PushCallback, PurchaseCallback {
    public static String SERVER_URL = "http://localhost:8080/";
    private Form current;
    private Resources theme;

    public void init(Object context) {
        theme = UIManager.initFirstTheme("/builderTheme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature, uncomment if you have a pro subscription
        Log.bindCrashProtection(true);
    }
    
    public void start() {
        if(current != null){
            current.show();
            return;
        }
        AppSettings app = AppStorage.getInstance().fetchAppSettings();
        app.setLogo(theme.getImage("icon.png"));
        app.setTitleBackground(theme.getImage("title-image.jpg"));
        BaseNavigationForm.showDishForm(app);
        
        Display.getInstance().callSerially(() -> {
            Display.getInstance().registerPush(new Hashtable(), true);        
        });
    }

    public void stop() {
        current = Display.getInstance().getCurrent();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = Display.getInstance().getCurrent();
        }
    }
    
    public void destroy() {
    }

    @Override
    public void push(String value) {
        onBuildResult(value);
    }

    public static void onBuildResult(String value) {
        if(value.startsWith("http")) {
            Dialog dlg = new Dialog("App Completed!", BoxLayout.y());
            Button send = new Button("Send App via e-mail");
            Button open = new Button("Open Link in Browser");
            Button share = new Button("Share Link");
            FontImage.setMaterialIcon(send, FontImage.MATERIAL_EMAIL);
            FontImage.setMaterialIcon(open, FontImage.MATERIAL_LINK);
            FontImage.setMaterialIcon(share, FontImage.MATERIAL_SHARE);
            if(Display.getInstance().isNativeShareSupported()) {
                dlg.addAll(send, open, share);
            } else {
                dlg.addAll(send, open);
            }
            send.addActionListener(e -> {
                dlg.dispose();
                String email = AppStorage.getInstance().fetchAppSettings().restaurantEmail.get();
                Display.getInstance().sendMessage(new String[] { email }, "New app", 
                        new Message("Check out the new app: " + value));
            });
            open.addActionListener(e -> {
                dlg.dispose();
                Display.getInstance().execute(value);
            });
            share.addActionListener(e -> {
                dlg.dispose();
                Display.getInstance().share("App URL: " + value, null, null, 
                        new Rectangle(share.getAbsoluteX(), share.getAbsoluteY(), share.getWidth(), share.getHeight()));
            });
            dlg.show();
        }
    }
    
    @Override
    public void registeredForPush(String deviceId) {
    }

    @Override
    public void pushRegistrationError(String error, int errorCode) {
        ToastBar.showErrorMessage("Error regisering for push, we need push to notify you about completed builds! " + error);
    }

    @Override
    public void itemPurchased(String sku) {
        AppForm.pendingBuild.run();
        ToastBar.showMessage("App build is starting! You will be notified on completion...", FontImage.MATERIAL_THUMB_UP);
    }

    @Override
    public void itemPurchaseError(String sku, String errorMessage) {
        ToastBar.showErrorMessage("Failure occurred: "+errorMessage);
    }

    @Override
    public void itemRefunded(String sku) {
    }

    @Override
    public void subscriptionStarted(String sku) {
    }

    @Override
    public void subscriptionCanceled(String sku) {
    }

    @Override
    public void paymentFailed(String paymentCode, String failureReason) {
    }

    @Override
    public void paymentSucceeded(String paymentCode, double amount, String currency) {
    }

}
